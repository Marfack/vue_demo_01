{"remainingRequest":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\babel-loader\\lib\\index.js!D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue?vue&type=template&id=21d292a5","dependencies":[{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue","mtime":1632462936388},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632030581148},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\babel-loader\\lib\\index.js","mtime":1632030584188},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632030588455},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632030581148},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632030586808}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAidmlld3MiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgaWQ6ICJjaGluYSIsCiAgc3R5bGU6IHsKICAgICJ3aWR0aCI6ICI2MDBweCIsCiAgICAiaGVpZ2h0IjogIjQwMHB4IiwKICAgICJtYXJnaW4iOiAiYXV0byIKICB9Cn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfZWxfc2Nyb2xsYmFyID0gX3Jlc29sdmVDb21wb25lbnQoImVsLXNjcm9sbGJhciIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9zY3JvbGxiYXIsIG51bGwsIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFshX2N0eC4kc3RvcmUuc3RhdGUubG9hZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVGV4dFZOb2RlKCIgIiArIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMuc3BvdFNlYXJjaEluZGV4KSwgMQogICAgICAvKiBURVhUICovCiAgICAgICksIF9ob2lzdGVkXzMsIF9ob2lzdGVkXzQsIF9jcmVhdGVUZXh0Vk5vZGUoIiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5zcG90TW9udGhseUluZGV4KSwgMQogICAgICAvKiBURVhUICovCiAgICAgICksIF9ob2lzdGVkXzUsIF9ob2lzdGVkXzYsIF9jcmVhdGVUZXh0Vk5vZGUoIiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5zcG90QmFpZHVUYWdTZW50aW1lbnQpLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKSwgX2hvaXN0ZWRfNywgX2hvaXN0ZWRfOCwgX2NyZWF0ZVRleHRWTm9kZSgiICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLnNwb3RCYWlkdVRhZ1dvcmRjbG91ZCksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pOwp9"},{"version":3,"sources":["D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue"],"names":[],"mappings":";;;AAES,EAAA,KAAK,EAAC;;;8BACT,mBAAA,CAAwE,KAAxE,EAAwE;AAAnE,EAAA,EAAE,EAAC,OAAgE;AAAxD,EAAA,KAAiD,EAAjD;AAAA,aAAA,OAAA;AAAA,cAAA,OAAA;AAAA,cAAA;AAAA;AAAwD,CAAxE,E,IAAA,E;;AAAA,C;;8BACmB,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BAAK,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BACJ,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BAAK,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BACA,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BAAK,mBAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;;;;uBALlC,YAAA,CAQe,uBARf,EAQe,IARf,EAQe;sBAPb;AAAA,aAMM,C,CANoB,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa,O,kBAAvC,mBAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALJ,UAKI,E,iBALoE,MACxE,gBAAA,CAAE,QAAA,CAAA,eAAF,C,EAAiB;AAAA;OAIb,EAJe,UAIf,EAJoB,UAIpB,E,iBAJyB,MAC7B,gBAAA,CAAE,QAAA,CAAA,gBAAF,C,EAAkB;AAAA;OAGd,EAHgB,UAGhB,EAHqB,UAGrB,E,iBAH0B,MAC9B,gBAAA,CAAE,QAAA,CAAA,qBAAF,C,EAAuB;AAAA;OAEnB,EAFqB,UAErB,EAF0B,UAE1B,E,iBAF+B,MACnC,gBAAA,CAAE,QAAA,CAAA,qBAAF,C,EAAuB;AAAA;OACnB,CANN,C,qCAMM,CANN;AAAA,K,CAOa;;;;AAAA,GARf,C","sourcesContent":["<template>\r\n  <el-scrollbar>\r\n    <div class=\"views\" v-if=\"!$store.state.loading\">\r\n      <div id=\"china\" style=\"width: 600px; height: 400px; margin: auto\"></div>\r\n      {{spotSearchIndex}}<br/><br/>\r\n      {{spotMonthlyIndex}}<br/><br/>\r\n      {{spotBaiduTagSentiment}}<br/><br/>\r\n      {{spotBaiduTagWordcloud}}\r\n    </div>\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nimport {getDataById} from '@/network/heatData'\r\nimport chinaMap from'@/assets/json/china.json'\r\n\r\nexport default {\r\n  name: 'Heat',\r\n  components: {\r\n  },\r\n  data() {\r\n    return {\r\n      index: 3,\r\n      data: [],\r\n      flag: false,\r\n      chart: null,\r\n      option: {\r\n        title: {\r\n          text: '地图-百度搜索指数',\r\n          x: 'center',\r\n          textStyle: {\r\n            fontsize: 24\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: function (params) {\r\n            var toolTiphtml = ''\r\n            if (isNaN(params.value)) {\r\n              toolTiphtml = params.name + \"暂无数据\"\r\n            } else {\r\n              toolTiphtml = params.name + '热度：' + params.value\r\n            }\r\n            return toolTiphtml;\r\n          }\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        visualMap: {\r\n          show: true,\r\n          type: 'piecewise',\r\n          seriesIndex: [0],\r\n          left: 'center',\r\n          top: 'bottom',\r\n          textStyle: {\r\n            color: '#000000'\r\n          }\r\n        },\r\n        geo: {\r\n          show: true,\r\n          map: 'china',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              fontsize: 12,\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n            }\r\n          },\r\n          roam: false,\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: '#FFFFFF',\r\n              borderColor: '#666666'\r\n            },\r\n            emphasis: {\r\n              areaColor: '#0099CC',\r\n            }\r\n          }\r\n        },\r\n        series: {\r\n          type: 'map',\r\n          map: 'china',\r\n          geoIndex: 0,\r\n          animation: false,\r\n          data: this.spotSearchIndex\r\n        }\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    spots: Array,\r\n    reload: Boolean\r\n  },\r\n  computed: {\r\n    spotSearchIndex: {\r\n      get() {\r\n        return this.data[0].map(item => {\r\n          return {\r\n            name: item.province_name,\r\n            value: parseInt(item.nums)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    spotMonthlyIndex: {\r\n      get() {\r\n        return this.data[1]\r\n      }\r\n    },\r\n    spotBaiduTagSentiment: {\r\n      get() {\r\n        return this.data[2]\r\n      }\r\n    },\r\n    spotBaiduTagWordcloud: {\r\n      get() {\r\n        return this.data[3]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getData() {\r\n      this.flag = false\r\n      this.data.splice(0,this.data.length)\r\n      this.$store.dispatch('asyncSetLoading', true)\r\n      this.$store.dispatch('asyncChangeCurrentView', this.index)\r\n      getDataById(this.spots[this.$store.state.currentSpotIndex].id).then(res => {\r\n        for (let data of res) {\r\n          data = data.data\r\n          if (data.status != 200) {\r\n            this.$route.push('/404')\r\n          }\r\n          this.data.push(data.data)\r\n        }\r\n        this.flag = true\r\n        this.$store.dispatch('asyncSetLoading', false)\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    reload() {\r\n      this.getData()\r\n    },\r\n    flag() {\r\n      if (this.flag) {\r\n        this.$echarts.init(document.getElementById('china')).setOption(this.option)\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n    this.$echarts.registerMap('china', chinaMap)\r\n  },\r\n  mounted() {\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.views {\r\n  padding: 80px 100px 400px 100px\r\n}\r\n</style>"],"sourceRoot":""}]}
{"remainingRequest":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue?vue&type=style&index=0&id=21d292a5&lang=css","dependencies":[{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue","mtime":1632660822755},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\css-loader\\dist\\cjs.js","mtime":1632030582501},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1632030588307},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\postcss-loader\\src\\index.js","mtime":1632030584172},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632030581148},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632030586808}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudmlld3Mgew0KICBwYWRkaW5nOiA4MHB4IDEwMHB4IDEwMHB4IDEwMHB4Ow0KfQ0KDQouYm94LWNhcmQgew0KICB3aWR0aDogMTMlOw0KICBwb3NpdGlvbjogZml4ZWQ7DQogIHRvcDogMjQwcHg7DQogIHJpZ2h0OiA0MnB4Ow0KfQ0K"},{"version":3,"sources":["D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\heat\\Heat.vue"],"names":[],"mappings":";AAoMA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"D:/VSCodeProjects/Demo/demo_01/src/views/heat/Heat.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-scrollbar>\r\n    <div class=\"views\" v-if=\"!$store.state.loading\">\r\n      <china-map :spotSearchIndex=\"spotSearchIndex\"></china-map>\r\n      <spot-monthly-line :time=\"time\" :spotMonthlyLine=\"spotMonthlyLine\"></spot-monthly-line>\r\n      <word-cloud :wordFrequency=\"wordFrequency\"></word-cloud>\r\n      <el-card class=\"box-card\" shadow=\"hover\">\r\n        <template #header>\r\n          <div class=\"card-header; display: flex\">\r\n            <span style=\"flex: 6; width: 100%; margin-right: 20px\">评论观点</span>\r\n            <span style=\"flex: 2; width: 100%\">\r\n              <el-button plain icon=\"el-icon-arrow-left\" @click=\"changeIndex(false)\"></el-button>\r\n            </span>\r\n            <span style=\"flex: 2; width: 100%\">\r\n              <el-button plain icon=\"el-icon-arrow-right\" @click=\"changeIndex(true)\"></el-button>\r\n            </span>\r\n          </div>\r\n        </template>\r\n        <div v-for=\"index in ((currentIndex === maxIndex) ? (spotBaiduTagSentiment.length - currentIndex * 10) : 10)\" :key=\"index\" class=\"text item\" style=\"display: flex\">\r\n          <span style=\"text-align: left; flex: 6; width: 100%\">\r\n            <el-tag :type=\"tag[index % 4]\">{{spotBaiduTagSentiment[currentIndex * 10 + index][0]}}</el-tag>\r\n          </span>\r\n          <span style=\"text-align: left; flex: 2; width: 100%; font-size: 12px; padding-top: 8px\">\r\n            <img src=\"../../assets/img/icon/赞.png\" style=\"width: 15px;\" />\r\n            {{spotBaiduTagSentiment[currentIndex * 10 + index][1]}}\r\n          </span>\r\n          <span style=\"text-align: left; flex: 2; width: 100%; font-size: 12px; padding-top: 8px; padding-left: 10px\">\r\n            <img src=\"../../assets/img/icon/踩.png\" style=\"width: 15px; margin-top: 4px\" />\r\n            {{spotBaiduTagSentiment[currentIndex * 10 + index][2]}}\r\n          </span>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nimport ChinaMap from './charts/ChinaMap'\r\nimport SpotMonthlyLine from './charts/SpotMonthlyLine'\r\nimport WordCloud from './charts/WordCloud'\r\nimport { getDataById } from '@/network/heatData'\r\n\r\nexport default {\r\n  name: 'Heat',\r\n  components: {\r\n    ChinaMap,\r\n    SpotMonthlyLine,\r\n    WordCloud\r\n  },\r\n  data() {\r\n    return {\r\n      index: 3,\r\n      data: [],\r\n      tag: [\r\n        'danger',\r\n        'warning',\r\n        'success',\r\n        'info'\r\n      ],\r\n      currentIndex: 0\r\n    }\r\n  },\r\n  props: {\r\n    spots: Array,\r\n    reload: Boolean\r\n  },\r\n  computed: {\r\n    spotSearchIndex: {\r\n      get() {\r\n        return this.data[0].map(item => {\r\n          return {\r\n            name: item.province_name,\r\n            value: parseInt(item.nums)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    spotMonthlyIndex: {\r\n      get() {\r\n        return this.data[1].map(item => {\r\n          return item.map(i => {\r\n            return parseInt(i)\r\n          })\r\n        })\r\n      }\r\n    },\r\n    spotBaiduTagSentiment: {\r\n      get() {\r\n        return this.data[2]\r\n      }\r\n    },\r\n    spotBaiduTagWordcloud: {\r\n      get() {\r\n        return this.data[3]\r\n      }\r\n    },\r\n    wordFrequency: {\r\n      get() {\r\n        return this.spotBaiduTagWordcloud.map(item => {\r\n          return {\r\n            name: item[1],\r\n            value: item[2]\r\n          }\r\n        })\r\n      }\r\n    },\r\n    time: {\r\n      get() {\r\n        const time = []\r\n        for (let i = 1; i <= 12; i++) {\r\n          time.push(i + '月')\r\n        }\r\n        return time\r\n      }\r\n    },\r\n    spotMonthlyLine: {\r\n      get() {\r\n        return [\r\n          {\r\n            name: '媒体指数',\r\n            type: 'line',\r\n            data: this.spotMonthlyIndex[0],\r\n            itemStyle: {\r\n              color: '#CC4444'\r\n            }\r\n          },\r\n          {\r\n            name: '咨询指数',\r\n            type: 'line',\r\n            data: this.spotMonthlyIndex[1],\r\n            itemStyle: {\r\n              color: '#44CC44'\r\n            }\r\n          },\r\n          {\r\n            name: '搜索指数',\r\n            type: 'line',\r\n            data: this.spotMonthlyIndex[2],\r\n            itemStyle: {\r\n              color: '#4444CC'\r\n            }\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    maxIndex: {\r\n      get() {\r\n        return this.spotBaiduTagSentiment.length / 10 - 2\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getData() {\r\n      this.flag = false\r\n      this.data.splice(0, this.data.length)\r\n      this.$store.dispatch('asyncSetLoading', true)\r\n      this.$store.dispatch('asyncChangeCurrentView', this.index)\r\n      getDataById(this.spots[this.$store.state.currentSpotIndex].id).then(res => {\r\n        for (let data of res) {\r\n          data = data.data\r\n          if (data.status == 404) {\r\n            this.$router.push('/404')\r\n            break\r\n          } else if (data.status == 403) {\r\n            this.$router.push('/403')\r\n            break\r\n          }\r\n          this.data.push(data.data)\r\n        }\r\n        this.$store.dispatch('asyncSetLoading', false)\r\n      })\r\n    },\r\n    changeIndex(flag) {\r\n      if (flag) {\r\n        if (this.currentIndex < this.maxIndex){\r\n          this.currentIndex++\r\n        }\r\n      } else {\r\n        if (this.currentIndex > 0) {\r\n          this.currentIndex--\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    reload() {\r\n      this.getData()\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.views {\r\n  padding: 80px 100px 100px 100px;\r\n}\r\n\r\n.box-card {\r\n  width: 13%;\r\n  position: fixed;\r\n  top: 240px;\r\n  right: 42px;\r\n}\r\n</style>"]}]}
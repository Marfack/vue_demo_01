{"remainingRequest":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\comprehensive_evaluation\\CompEvaluation.vue?vue&type=template&id=0716d3ae","dependencies":[{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\comprehensive_evaluation\\CompEvaluation.vue","mtime":1632394889596},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632030581148},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\babel-loader\\lib\\index.js","mtime":1632030584188},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632030588455},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632030581148},{"path":"D:\\VSCodeProjects\\Demo\\demo_01\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632030586808}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxlbC1zY3JvbGxiYXI+DQogICAgPGRpdiBjbGFzcz0idmlld3MiIHYtaWY9IiEkc3RvcmUuc3RhdGUubG9hZGluZyI+DQogICAgICA8ZGl2IGlkPSJ3b3JkY2xvdWQiPjwvZGl2Pg0KICAgICAge3tzY29yZX19PGJyLz4NCiAgICAgIHt7c3BvdEF2Z1Njb3JlfX08YnIvPg0KICAgICAge3tzcG90QXZnU2VudGltZW50fX0NCiAgICA8L2Rpdj4NCiAgPC9lbC1zY3JvbGxiYXI+DQo="},{"version":3,"sources":["D:\\VSCodeProjects\\Demo\\demo_01\\src\\views\\comprehensive_evaluation\\CompEvaluation.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/VSCodeProjects/Demo/demo_01/src/views/comprehensive_evaluation/CompEvaluation.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-scrollbar>\r\n    <div class=\"views\" v-if=\"!$store.state.loading\">\r\n      <div id=\"wordcloud\"></div>\r\n      {{score}}<br/>\r\n      {{spotAvgScore}}<br/>\r\n      {{spotAvgSentiment}}\r\n    </div>\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nimport {getDataById} from '@/network/compEvaluationData'\r\nimport \"echarts-wordcloud/dist/echarts-wordcloud.min.js\"\r\nexport default {\r\n  name: 'CompEvaluation',\r\n  data() {\r\n    return {\r\n      index: 2,\r\n      data: [],\r\n      flag: false,\r\n      chart: null\r\n    }\r\n  },\r\n  props: {\r\n    spots: Array,\r\n    reload: Boolean\r\n  },\r\n  computed: {\r\n    score: {\r\n      get() {\r\n        return this.data[0]\r\n      }\r\n    },\r\n    wordFrequency: {\r\n      get() {\r\n        return this.data[1].word_frequency.map((item) => {\r\n          return {\r\n            name: item.word,\r\n            value: item.count\r\n          }\r\n        })\r\n      }\r\n    },\r\n    spotAvgScore: {\r\n      get() {\r\n        return this.data[2].monthly_score_info\r\n      }\r\n    },\r\n    spotAvgSentiment: {\r\n      get() {\r\n        return this.data[3].monthly_sentiment_info\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getData() {\r\n      this.flag = false;\r\n      this.data.splice(0,this.data.length)\r\n      this.$store.dispatch('asyncSetLoading', true)\r\n      this.$store.dispatch('asyncChangeCurrentView', this.index)\r\n      getDataById(this.spots[this.$store.state.currentSpotIndex].id).then(res => {\r\n        for (let data of res) {\r\n          data = data.data\r\n          if (data.status != 200) {\r\n            this.$route.push('/404')\r\n          }\r\n          this.data.push(data.data)\r\n        }\r\n        this.$store.dispatch('asyncSetLoading', false)\r\n        this.flag = true\r\n      })\r\n    },\r\n    drawWordCloud() {\r\n      this.chart.setOption({\r\n        title: {\r\n          text: '词频统计'\r\n        }, \r\n        tooltip: {\r\n          show: true\r\n        },\r\n        series: [{\r\n          name: '词频统计',\r\n          type: 'wordCloud',\r\n          shape: 'smooth',\r\n          sizeRange: [6, 66],\r\n          gridSize: 8,\r\n          size: ['100%', '100%'],\r\n          rotationRange: [-45, 90],\r\n          textStyle: {\r\n            normal: {\r\n              fontFamily: 'Titillium Web',\r\n              color() {\r\n                return 'rgb(' + [\r\n                        Math.round(Math.random() * 160),\r\n                        Math.round(Math.random() * 160),\r\n                        Math.round(Math.random() * 160)\r\n                    ].join(',') + ')'\r\n              },\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowColor: '#333'\r\n              }\r\n            }\r\n          },\r\n          left: 'center',\r\n          top: 'center',\r\n          right: null,\r\n          bottom: null,\r\n          width: '100%',\r\n          height: '100%',\r\n          data: this.wordFrequency\r\n        }]\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    reload() {\r\n      this.getData()\r\n    },\r\n    flag() {\r\n      if (this.flag) {\r\n        new Promise(resolve => {\r\n          resolve()\r\n        }).then(() => {\r\n          this.chart = this.$echarts.init(document.getElementById('wordcloud'))\r\n          this.drawWordCloud()\r\n        })\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getData()\r\n  },\r\n  mounted() {\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.views {\r\n  padding: 80px 100px 400px 100px;\r\n}\r\n\r\n#wordcloud {\r\n  height: 300px;\r\n  width: 60%; border:\r\n  solid 1px;\r\n  text-align: center;\r\n  margin: auto;\r\n}\r\n</style>"]}]}